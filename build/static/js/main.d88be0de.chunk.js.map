{"version":3,"sources":["Components/MoodBoard/ImageComponent.js","Components/Carousel/ProductCard.js","Components/Carousel/ProductsCarousel.js","Components/Modal/MenuModal.js","Theme/Constants.js","Components/MoodBoard/MoodBoard.js","Components/Modal/SettingsModal.js","App.js","index.js"],"names":["ImageComponent","image","shapeProps","id","isSelected","onSelect","handleDragStart","handleDragEnd","onChange","handleOnDelete","handleImageBounds","useImage","src","img","shapeRef","useRef","transformRef","useEffect","current","nodes","getLayer","batchDraw","zIndex","scaleX","scaleY","draggable","onDrop","e","onDragStart","onDragEnd","onClick","ref","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","onTransformEnd","node","width","Math","max","height","x","y","onMouseOver","target","getStage","container","style","cursor","onMouseLeave","dragBoundFunc","pos","boundBoxFunc","oldBox","newBox","stroke","fill","radius","data","ProductCard","item","alt","name","price","productUrl","stockStatus","useContext","ProductItemsContext","mbItems","setMbItems","setSnackPack","snackPack","stageDimensions","MoodBoardInfoContext","Card","sx","maxWidth","padding","marginTop","marginBottom","marginRight","CardMedia","component","objectFit","CardContent","Typography","variantBottom","Button","centerX","centerY","concat","crossOrigin","prev","message","key","Date","getTime","startIcon","ProductsCarousel","items","itemsLoaded","errorLoadingItems","useState","filteredItems","setFilteredItems","searchText","setSearchText","newFilteredItems","filter","toLowerCase","includes","variant","marginLeft","className","TextField","placeholder","value","InputProps","startAdornment","InputAdornment","position","Search","fullWidth","length","elementType","disableImagesLoaded","options","accessibility","static","reloadOnUpdate","contain","adaptiveHeight","setGalarySize","map","i","CircularProgress","MenuModal","open","handleClose","Modal","onClose","Themes","createContext","MoodBoard","lowerBorderLimit","upperBorderLimit","stageWidth","sliderValue","setSliderValue","scale","stageX","stageY","setStageDimensions","stageRef","containerRef","dragUrl","dragId","triggerExport","setTriggerExport","selectedId","setSelectedId","modalOpen","setModalOpen","theme","ThemeContext","handleExport","handleResize","clientWidth","window","addEventListener","imgSrc","newImages","handleImageLimitBounds","shapeCurrent","getClientRect","widthOfCanvas","bufferCanvas","heightOfCanvas","scaleRelativeToPoint","point","increaseScale","stage","oldScale","mousePointTo","newScale","Provider","color","align","transform","Slider","disabled","size","valueLabelDisplay","event","newValue","min","step","preventDefault","setPointersPositions","getPointerPosition","onDragOver","backgroundColor","fontSize","fontFamily","letterSpacing","transition","fontVariationSettings","outline","textAlign","display","flexDirection","alignItems","class","points","handleStageClassname","onMouseDown","clickedOnEmpty","clickedOnBackground","getId","checkDeselect","moveToTop","images","slice","find","index","indexOf","splice","push","onSelected","newAttrs","imagesToUpdate","singleImageToUpdate","handleTransformChange","Fab","SettingsModal","handleCanvasExport","setTheme","RadioGroup","row","justifyContent","FormControlLabel","control","Radio","label","labelPlacement","api","WooCommerceRestApi","url","process","consumerKey","consumerSecret","version","App","setItems","setItemsLoaded","snackbarOpen","setSnackbarOpen","React","undefined","messageInfo","setMessageInfo","settingsModalOpen","setSettingsModalOpen","getProductsFromWooCommerce","get","then","res","status","forEach","product","imageToAdd","brandName","permalink","oldItems","catch","err","console","log","Settings","Snackbar","autoHideDuration","reason","TransitionProps","onExited","Alert","severity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d88be0de.chunk.js","sourcesContent":["/** @format */\n\nimport React, { useRef, useEffect, Fragment } from \"react\";\nimport { Image, Path, Transformer, Circle } from \"react-konva\";\nimport useImage from \"use-image\";\nimport \"../Styles/canvas.css\";\nimport { Fab } from \"@mui/material\";\n\n// The image that can be dragged and dropped on canvas\nconst ImageComponent = ({\n  image,\n  shapeProps,\n  id,\n  isSelected,\n  onSelect,\n  handleDragStart,\n  handleDragEnd,\n  onChange,\n  handleOnDelete,\n  handleImageBounds,\n}) => {\n  // creating image based on its src\n  const [img] = useImage(image?.src, \"anonymous\");\n  const shapeRef = useRef();\n  const transformRef = useRef();\n\n  // if selected create box around the image to allow performing resizes\n  useEffect(() => {\n    if (isSelected) {\n      transformRef.current.nodes([shapeRef.current]);\n      transformRef.current.getLayer().batchDraw();\n      transformRef.current.zIndex(10000);\n      shapeRef.current.scaleX(1);\n      shapeRef.current.scaleY(1);\n    }\n  }, [isSelected]);\n\n  // called when performed resize\n  const handleTransformOnEnd = (e) => {\n    // node - reference to image\n    const node = shapeRef.current;\n    const scaleX = node.scaleX();\n    const scaleY = node.scaleY();\n    node.scaleX(1);\n    node.scaleY(1);\n    node.width(Math.max(5, node.width() * scaleX));\n    node.height(Math.max(node.height() * scaleY));\n    onChange({\n      ...shapeProps,\n      x: node.x(),\n      y: node.y(),\n      // set minimal value\n      width: node.width(),\n      height: node.height(),\n    });\n  };\n\n  const onMouseOver = (e) => {\n    const container = e.target.getStage().container();\n    container.style.cursor = \"grab\";\n  };\n\n  const onMouseLeave = (e) => {\n    const container = e.target.getStage().container();\n    container.style.cursor = \"default\";\n  };\n\n  const handleOnDrop = (e) => {};\n  return (\n    <Fragment>\n      <Image\n        image={img}\n        id={id}\n        draggable\n        onDrop={handleOnDrop}\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        onClick={onSelect}\n        ref={shapeRef}\n        {...shapeProps}\n        shadowColor=\"black\"\n        shadowBlur={10}\n        shadowOffsetX={0}\n        shadowOffsetY={4}\n        shadowOpacity={0.6}\n        onTransformEnd={handleTransformOnEnd}\n        onMouseOver={onMouseOver}\n        onMouseLeave={onMouseLeave}\n        dragBoundFunc={(pos) => handleImageBounds(pos, shapeRef.current)}\n      />\n      {isSelected && (\n        // when selected it creates box around the image to perform resizes\n        <Transformer\n          ref={transformRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n          zIndex={500}\n        >\n          <Circle\n            x={40}\n            y={45}\n            stroke=\"white\"\n            fill=\"white\"\n            radius={30}\n            shadowColor=\"black\"\n            shadowBlur=\"4\"\n            shadowOffsetX={4}\n            shadowOffsetY={4}\n            shadowOpacity={0.5}\n            onClick={() => handleOnDelete(img.src)}\n          />\n          <Path\n            fill=\"black\"\n            x={30}\n            y={30}\n            data=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n            onClick={() => handleOnDelete(img.src)}\n          />\n        </Transformer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ImageComponent;\n","/** @format */\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport React, { useContext } from \"react\";\nimport { ProductItemsContext } from \"../../App\";\nimport { MoodBoardInfoContext } from \"../MoodBoard/MoodBoard\";\nimport AddToPhotosIcon from \"@mui/icons-material/AddToPhotos\";\n\nconst ProductCard = ({ item }) => {\n  const { alt, name, src, productUrl, price, stockStatus, id } = item;\n  const { mbItems, setMbItems, snackPack, setSnackPack } =\n    useContext(ProductItemsContext);\n  const { stageDimensions } = useContext(MoodBoardInfoContext);\n  // const matches = useMediaQuery();\n\n  const handleAddProductToMoodBoard = () => {\n    let centerX = stageDimensions.width / 2;\n    let centerY = stageDimensions.height / 2;\n    setMbItems(\n      mbItems.concat([\n        {\n          x: centerX,\n          y: centerY,\n          src: src,\n          crossOrigin: \"anonymous\",\n          id: id,\n        },\n      ])\n    );\n\n    // Show snackbar\n    setSnackPack((prev) => [\n      ...prev,\n      { message: `Added ${alt} to Moodboard.`, key: new Date().getTime() },\n    ]);\n  };\n\n  return (\n    <Card\n      sx={{\n        maxWidth: 400,\n        padding: \"0.1em\",\n        marginTop: \"5px\",\n        marginBottom: \"5px\",\n        marginRight: \"10px\",\n        height: 500,\n      }}\n    >\n      <CardMedia\n        component=\"img\"\n        image={src}\n        alt={alt}\n        sx={{ padding: \"2px\", objectFit: \"contain\" }}\n      />\n      <CardContent>\n        <Typography variantBottom=\"h3\" component=\"div\">\n          {alt}\n        </Typography>\n        <Typography variantBottom=\"h4\" component=\"div\">\n          {price}\n        </Typography>\n        <Button\n          onClick={handleAddProductToMoodBoard}\n          startIcon={<AddToPhotosIcon />}\n        >\n          Add to Moodboard\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ProductCard;\n","/** @format */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { ProductItemsContext } from \"../../App\";\nimport ProductCard from \"../Carousel/ProductCard\";\nimport Flickity from \"react-flickity-component\";\nimport \"../Styles/flickity.css\";\nimport {\n  CircularProgress,\n  TextField,\n  InputAdornment,\n  Typography,\n} from \"@mui/material\";\nimport { Search } from \"@mui/icons-material\";\n\nconst ProductsCarousel = () => {\n  const { items, itemsLoaded, errorLoadingItems } =\n    useContext(ProductItemsContext);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const flickityOptions = {\n    accessibility: false,\n  };\n  const [searchText, setSearchText] = useState(\"\");\n\n  const handleSearchTextChange = (e) => {\n    setSearchText(e.target.value);\n  };\n\n  useEffect(() => {\n    if (searchText === \"\") {\n      setFilteredItems([...items]);\n    } else {\n      const newFilteredItems = [\n        ...items.filter((item) =>\n          item.alt.toLowerCase().includes(searchText.toLowerCase())\n        ),\n      ];\n      setFilteredItems([...newFilteredItems]);\n    }\n  }, [searchText]);\n\n  useEffect(() => {\n    if (itemsLoaded) {\n      setFilteredItems([...items]);\n    }\n  }, [itemsLoaded]);\n\n  return (\n    <div>\n      {!itemsLoaded && !errorLoadingItems ? (\n        <CircularProgress className=\"progress\" />\n      ) : errorLoadingItems ? (\n        <Typography variant=\"h4\" component=\"div\" style={{ marginLeft: \"20px\" }}>\n          Error retrieving items.\n        </Typography>\n      ) : (\n        <div>\n          <div className=\"product-search-text-field\">\n            <TextField\n              id=\"outlined-basic\"\n              placeholder=\"Search for products...\"\n              // label=\"Search for products...\"\n              variant=\"standard\"\n              value={searchText}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={handleSearchTextChange}\n              fullWidth\n            ></TextField>\n          </div>\n          {filteredItems && filteredItems.length > 0 && !errorLoadingItems ? (\n            <Flickity\n              className=\"flickity\"\n              elementType=\"div\"\n              disableImagesLoaded={false}\n              key={itemsLoaded}\n              options={flickityOptions}\n              static\n              reloadOnUpdate\n              contain\n              adaptiveHeight\n              setGalarySize={false}\n            >\n              {filteredItems.map((item, i) => {\n                return <ProductCard key={i} item={item} />;\n              })}\n            </Flickity>\n          ) : (\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              style={{ marginLeft: \"20px\" }}\n            >\n              No products found.\n            </Typography>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductsCarousel;\n","/** @format */\n\nimport React, { useRef, useContext } from \"react\";\nimport \"../Styles/menuModal.css\";\nimport { Modal, Box, Typography } from \"@mui/material\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ProductCard from \"../Carousel/ProductCard\";\nimport { ProductItemsContext } from \"../../App\";\nimport ProductsCarousel from \"../Carousel/ProductsCarousel\";\n\nconst MenuModal = ({ open, handleClose }) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      {/* Search Box */}\n      {/* <CSSTransition\n        //   in={showMessage}\n        nodeRef={nodeRef}\n        timeout={300}\n        classNames=\"alert\"\n        unmountOnExit\n        //   onEnter={() => setShowButton(false)}\n        //   onExited={() => setShowButton(true)}\n      > */}\n      <div className=\"menuModal\">\n        <h3 style={{ marginLeft: \"10px\" }}>Product Suggestions</h3>\n        <ProductsCarousel />\n      </div>\n      {/* </CSSTransition> */}\n    </Modal>\n  );\n};\n\nexport default MenuModal;\n","/** @format */\n\nexport const Themes = {\n  WHITE: \"WHITE\",\n  BLACK: \"BLACK\",\n  BEIGE: \"BEIGE\",\n};\n","/** @format */\n\nimport React, {\n  useRef,\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n} from \"react\";\nimport { Stage, Layer } from \"react-konva\";\nimport ImageComponent from \"./ImageComponent\";\nimport { Fab, Typography, Slider, Card } from \"@mui/material\";\nimport Add from \"@mui/icons-material/Add\";\nimport MenuModal from \"../Modal/MenuModal\";\nimport { ProductItemsContext, ThemeContext } from \"../../App\";\nimport { Themes } from \"../../Theme/Constants\";\nimport \"../Styles/canvas.css\";\nimport \"../Styles/theme.css\";\n\nexport const MoodBoardInfoContext = createContext();\n\nconst MoodBoard = () => {\n  // the pixel amount that the x and y position of the image can go beyond\n  //  the canvas border\n  const lowerBorderLimit = -100;\n  const upperBorderLimit = 100;\n  // static canvas dimensions used for scaling ratio\n  const stageWidth = 2800,\n    stageHeight = 2800;\n  // dynamic canvas dimensions\n  const [sliderValue, setSliderValue] = useState(1);\n  const [stageDimensions, setStageDimensions] = useState({\n    width: stageWidth,\n    height: stageHeight,\n    scale: 1,\n    stageX: 0,\n    stageY: 0,\n  });\n  // stageRef is used for handling callbacks - example: getting canvas positions after drag and rop\n  const stageRef = useRef();\n  // containerRef is used for dynamic canvas scalling\n  // main purpose of containerRef is to get width of parent div of canvas stage\n  const containerRef = useRef();\n  // dragUrl stores temporary src of dragged image\n  const [dragUrl, setDragUrl] = useState();\n  const [dragId, setDragId] = useState();\n  // images stores images that are added to canvas\n  const { mbItems, setMbItems, triggerExport, setTriggerExport } =\n    useContext(ProductItemsContext);\n  // const [oldScale, setOldScale] = useState(sliderValue);\n  // backgroundImage is used for setting backgroundImage of canvas\n  // const [backgroundImage, setBackgroundImage] = useState();\n  // selectedId is used for keeping selected image to handle resizes, z-index priority etc.\n  const [selectedId, setSelectedId] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const { theme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    if (triggerExport) {\n      handleExport();\n      setTriggerExport(false);\n    }\n  }, [triggerExport]);\n\n  // function to handle resize of canvas dimensions based on window width or when sidebar is closed or opened\n  const handleResize = () => {\n    let sceneWidth = containerRef.current.clientWidth;\n    let scale = sceneWidth / stageWidth;\n\n    setStageDimensions({\n      width: stageWidth * scale,\n      height: stageHeight * scale,\n      scale: scale,\n    });\n  };\n\n  // add eventListener for every window resize to call handleResize function\n  useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize, false);\n    return () => window.addEventListener(\"resize\", handleResize, false);\n  }, []);\n\n  // if clicked on empty space of canvas, including backgroundImage perform deselect item\n  const checkDeselect = (e) => {\n    const clickedOnEmpty = e.target === e.target.getStage();\n    const clickedOnBackground = e.target.getId() === \"canvasBackground\";\n    if (clickedOnEmpty || clickedOnBackground) {\n      setSelectedId(null);\n    }\n  };\n\n  // when element is dragged pass its image src to allow it for adding it to canvas\n  const onChangeDragUrl = (dragUrl, id) => {\n    setDragUrl(dragUrl);\n    setDragId(id);\n  };\n\n  // update image attributes when performing resize\n  const handleTransformChange = (newAttrs, i) => {\n    let imagesToUpdate = mbItems;\n    let singleImageToUpdate = imagesToUpdate[i];\n    // update old attributes\n    singleImageToUpdate = newAttrs;\n    imagesToUpdate[i] = singleImageToUpdate;\n    setMbItems(imagesToUpdate);\n  };\n\n  // function to handle adding images on drag and drop to canvas\n  const handleOnDrop = (e, id) => {\n    e.preventDefault();\n    stageRef.current.setPointersPositions(e);\n\n    setMbItems(\n      mbItems.concat([\n        {\n          ...stageRef.current.getPointerPosition(),\n          src: dragUrl,\n          id: dragId,\n        },\n      ])\n    );\n\n    // console.log(\"ondrop\");\n    // console.log(e);\n  };\n\n  // Removes image\n  const handleOnDelete = (imgSrc) => {\n    const newImages = mbItems.filter((image) => image.src !== imgSrc);\n    setMbItems(newImages);\n  };\n\n  // function to handle adding images on click\n  const handleAddOnClick = (src, id) => {\n    let centerX = stageDimensions.width / 2;\n    let centerY = stageDimensions.height / 2;\n    setMbItems(\n      mbItems.concat([\n        {\n          x: centerX,\n          y: centerY,\n          src: src,\n          id: id,\n        },\n      ])\n    );\n  };\n\n  // when sidebar state changes this function is being called\n  const resizeCanvasOnSidebarChange = () => {\n    // wait for sidebar animation to complete\n    setTimeout(() => {\n      handleResize();\n    }, 420);\n  };\n\n  const onSelected = (e, id) => {\n    setSelectedId(id);\n    e.target.moveToTop();\n    setMbItems((images) => {\n      const newImages = images.slice();\n      const img = images.find((i) => id === i.id);\n      const index = images.indexOf(img);\n      newImages.splice(index, 1);\n      newImages.push(img);\n      return newImages;\n    });\n    // console.log(\"onSelected\");\n    // console.log(e);\n  };\n\n  const handleDragStart = (e, id) => {\n    setSelectedId(id);\n    // e.target.moveToTop();\n    setMbItems((images) => {\n      const newImages = images.slice();\n      const img = images.find((i) => id === i.id);\n      const index = images.indexOf(img);\n      newImages.splice(index, 1);\n      newImages.push(img);\n      return newImages;\n    });\n    // console.log(\"drag start\");\n    // console.log(e);\n  };\n\n  const handleDragEnd = (e) => {};\n\n  // Keep image within bounds based on the limit value\n  const handleImageLimitBounds = (pos, shapeCurrent) => {\n    // console.log(\"pos: \" + pos.x + \" , \" + pos.y);\n    // console.log(shapeCurrent.getClientRect());\n    const { height, width } = shapeCurrent.getClientRect();\n    // console.log(\"shape stuff: \" + height + \", \" + width);\n    // console.log(stageRef.current);\n    const widthOfCanvas = stageRef.current.bufferCanvas.width;\n    const heightOfCanvas = stageRef.current.bufferCanvas.height;\n    // console.log(\"canvas stuff:\" + widthOfCanvas + \" , \" + heightOfCanvas);\n    // console.log(\"scale: \" + shapeCurrent.scaleX() + \", \" + shapeCurrent.scaleY());\n    let x = pos.x;\n    let y = pos.y;\n    if (pos.x < lowerBorderLimit) {\n      x = lowerBorderLimit;\n    } else if (pos.x > widthOfCanvas - width + upperBorderLimit) {\n      x = widthOfCanvas - width + upperBorderLimit;\n    }\n\n    if (pos.y < lowerBorderLimit) {\n      y = lowerBorderLimit;\n    } else if (pos.y > heightOfCanvas - height + upperBorderLimit) {\n      y = heightOfCanvas - height + upperBorderLimit;\n    }\n\n    return {\n      x,\n      y,\n    };\n  };\n\n  const handleModalOpen = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleStageClassname = () => {\n    let className = \"\";\n    if (selectedId) {\n      className += \"canvasStageSelected\";\n    } else {\n      className += \"\";\n    }\n\n    if (theme === Themes.WHITE) {\n      className += \" whiteBackground\";\n    } else if (theme === Themes.BEIGE) {\n      className += \" beigeBackground\";\n    } else if (theme === Themes.BLACK) {\n      className += \" blackBackground\";\n    }\n\n    return className;\n  };\n\n  const handleExport = () => {\n    // console.log(mbItems);\n    // const uri = stageRef.current.toDataURL();\n    // console.log(uri);\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setSliderValue(newValue);\n\n    if (stageRef === null || newValue === sliderValue) {\n      return;\n    }\n    if (newValue > sliderValue) {\n      scaleRelativeToPoint(\n        { x: stageDimensions.width / 2, y: stageDimensions.height / 2 },\n        true\n      );\n    } else {\n      scaleRelativeToPoint(\n        { x: stageDimensions.width / 2, y: stageDimensions.height / 2 },\n        false\n      );\n    }\n  };\n\n  const scaleRelativeToPoint = (point, increaseScale) => {\n    const scaleBy = 1.05;\n    const stage = stageRef.current;\n    const oldScale = stage.scaleX();\n    const mousePointTo = {\n      x: point.x / oldScale - stage.x() / oldScale,\n      y: point.y / oldScale - stage.y() / oldScale,\n    };\n\n    const newScale = increaseScale ? oldScale * scaleBy : oldScale / scaleBy;\n\n    setStageDimensions({\n      ...stageDimensions,\n      scale: newScale,\n      x: (point.x / newScale - mousePointTo.x) * newScale,\n      y: (point.y / newScale - mousePointTo.y) * newScale,\n    });\n  };\n\n  return (\n    <div>\n      <MoodBoardInfoContext.Provider\n        value={{ stageDimensions, setStageDimensions }}\n      >\n        <MenuModal open={modalOpen} handleClose={handleModalClose} />\n        <div className=\"workContainer\">\n          {/* <ItemsList\n          dragUrl={dragUrl}\n          onChangeDragUrl={onChangeDragUrl}\n          handleAddOnClick={handleAddOnClick}\n          // addToBackground={addToBackground}\n          // removeBackground={removeBackground}\n          resizeCanvasOnSidebarChange={resizeCanvasOnSidebarChange}\n          stageRef={stageRef}\n        /> */}\n          <div className=\"slider\">\n            <Typography\n              component=\"p\"\n              color={mbItems && mbItems.length === 0 ? \"black\" : \"inherit\"}\n              align=\"center\"\n              sx={{ transform: \"translateX(-70%)\" }}\n            >\n              Zoom\n            </Typography>\n            <Slider\n              disabled={mbItems && mbItems.length === 0}\n              size=\"small\"\n              aria-label=\"Small\"\n              valueLabelDisplay=\"auto\"\n              onChange={handleSliderChange}\n              max={2}\n              min={1}\n              step={0.1}\n              value={sliderValue}\n            />\n          </div>\n          <div className=\"canvasWrap\">\n            <div\n              className=\"canvasBody\"\n              ref={containerRef}\n              onDrop={handleOnDrop}\n              onDragOver={(e) => e.preventDefault()}\n            >\n              {mbItems && mbItems.length === 0 ? (\n                <Card\n                  style={{\n                    backgroundColor: \"#f8f6f1\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    height: \"500px\",\n                    width: \"300px\",\n                    padding: \"10px\",\n                    marginBottom: \"20px\",\n                  }}\n                >\n                  <Typography\n                    component=\"h3\"\n                    color=\"inherit\"\n                    align=\"center\"\n                    sx={{\n                      fontSize: \"50px\",\n                      fontFamily: \"SangbleuSans,Helvetica,Arial,sans-serif\",\n                      letterSpacing: \"-2px\",\n                      transition: \"700ms ease\",\n                      fontVariationSettings: \"wght 311\",\n                      marginBottom: \"2rem\",\n                      outline: \"none\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    Add products by clicking on the add item button below.\n                  </Typography>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <svg id=\"more-arrows\">\n                      <polygon\n                        class=\"arrow-top\"\n                        points=\"37.6,27.9 1.8,1.3 3.3,0 37.6,25.3 71.9,0 73.7,1.3 \"\n                      />\n                      <polygon\n                        class=\"arrow-middle\"\n                        points=\"37.6,45.8 0.8,18.7 4.4,16.4 37.6,41.2 71.2,16.4 74.5,18.7 \"\n                      />\n                      <polygon\n                        class=\"arrow-bottom\"\n                        points=\"37.6,64 0,36.1 5.1,32.8 37.6,56.8 70.4,32.8 75.5,36.1 \"\n                      />\n                    </svg>\n                  </div>\n                </Card>\n              ) : (\n                <Stage\n                  width={stageDimensions.width}\n                  height={stageDimensions.height}\n                  scaleX={stageDimensions.scale}\n                  scaleY={stageDimensions.scale}\n                  x={stageDimensions.stageX}\n                  y={stageDimensions.stageY}\n                  className={handleStageClassname()}\n                  ref={stageRef}\n                  onMouseDown={(e) => {\n                    // deselect when clicked on empty area or background image\n                    checkDeselect(e);\n                  }}\n                >\n                  <Layer>\n                    {/* {typeof backgroundImage === \"string\" && (\n                // check if background image is not empty, default state is null\n                <CanvasBackground\n                  backgroundUrl={backgroundImage}\n                  width={stageWidth}\n                  height={stageHeight}\n                />\n              )} */}\n                    {mbItems.map((image, i) => {\n                      return (\n                        <ImageComponent\n                          image={image}\n                          shapeProps={image}\n                          id={image?.id}\n                          key={image?.id}\n                          isSelected={image?.id === selectedId}\n                          onSelect={(e) => onSelected(e, image?.id)}\n                          handleDragStart={(e) => handleDragStart(e, image?.id)}\n                          handleDragEnd={handleDragEnd}\n                          handleImageBounds={handleImageLimitBounds}\n                          onChange={(newAttrs) => {\n                            handleTransformChange(newAttrs, i);\n                          }}\n                          handleOnDelete={handleOnDelete}\n                        />\n                      );\n                    })}\n                  </Layer>\n                </Stage>\n              )}\n            </div>\n          </div>\n          <div className=\"fab\">\n            <Fab\n              color=\"primary\"\n              aria-label=\"add\"\n              size=\"\"\n              onClick={handleModalOpen}\n            >\n              <Add />\n            </Fab>\n          </div>\n        </div>\n      </MoodBoardInfoContext.Provider>\n    </div>\n  );\n};\n\nexport default MoodBoard;\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport {\n  Modal,\n  Typography,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Button,\n} from \"@mui/material\";\nimport \"../Styles/settingsModal.css\";\nimport { ProductItemsContext, ThemeContext } from \"../../App\";\nimport { Themes } from \"../../Theme/Constants\";\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\n\nconst SettingsModal = ({ open, handleClose, handleCanvasExport }) => {\n  const { theme, setTheme } = useContext(ThemeContext);\n  const { setTriggerExport, snackPack, setSnackPack } =\n    useContext(ProductItemsContext);\n\n  const handleThemeSelection = (event) => {\n    setTheme(event.target.value);\n  };\n\n  const handleSettingsModalExport = () => {\n    // Show snackbar\n    setSnackPack((prev) => [\n      ...prev,\n      { message: `Export feature coming soon!`, key: new Date().getTime() },\n    ]);\n  };\n\n  return (\n    <Modal open={open} onClose={handleClose}>\n      <div className=\"settingsModal\">\n        <Typography\n          variant=\"h3\"\n          component=\"div\"\n          style={{\n            marginTop: \"20px\",\n            marginBottom: \"20px\",\n          }}\n        >\n          Edit Your Mood Board\n        </Typography>\n        <Typography\n          variant=\"p\"\n          component=\"div\"\n          style={{\n            marginBottom: \"10px\",\n            fontSize: \"10px\",\n          }}\n        >\n          BACKGROUND COLOR\n        </Typography>\n        <RadioGroup\n          row\n          aria-labelledby=\"demo-row-radio-buttons-group-label\"\n          name=\"row-radio-buttons-group\"\n          onChange={handleThemeSelection}\n          value={theme}\n          style={{ justifyContent: \"center\", marginBottom: \"10px\" }}\n        >\n          <FormControlLabel\n            value={Themes.WHITE}\n            control={<Radio />}\n            label={<span className=\"whiteRadioLabel\"></span>}\n            labelPlacement=\"top\"\n          />\n          <FormControlLabel\n            value={Themes.BEIGE}\n            control={<Radio />}\n            label={<span className=\"beigeRadioLabel\"></span>}\n            labelPlacement=\"top\"\n          />\n          <FormControlLabel\n            value={Themes.BLACK}\n            control={<Radio />}\n            label={<span className=\"blackRadioLabel\"></span>}\n            labelPlacement=\"top\"\n          />\n        </RadioGroup>\n        <Button\n          variant=\"outlined\"\n          startIcon={<IosShareIcon />}\n          style={{ justifyContent: \"center\" }}\n          onClick={() => {\n            handleSettingsModalExport();\n            setTriggerExport(true);\n          }}\n        >\n          Export\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SettingsModal;\n","/** @format */\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { Typography, Snackbar, Alert, Fab } from \"@mui/material\";\nimport WooCommerceRestApi from \"@woocommerce/woocommerce-rest-api\";\nimport { Settings } from \"@mui/icons-material\";\nimport MoodBoard from \"./Components/MoodBoard/MoodBoard\";\nimport SettingsModal from \"./Components/Modal/SettingsModal\";\nimport { Themes } from \"./Theme/Constants\";\nimport \"./Components/Styles/app.css\";\nimport \"./Components/Styles/theme.css\";\n\nexport const ProductItemsContext = createContext();\nexport const ThemeContext = createContext();\n\nconst api = new WooCommerceRestApi({\n  url: process.env.REACT_APP_NEXT_PUBLIC_WORDPRESS_SITE,\n  consumerKey: process.env.REACT_APP_WC_CONSUMER_KEY,\n  consumerSecret: process.env.REACT_APP_WC_CONSUMER_SECRET,\n  version: \"wc/v3\",\n});\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [itemsLoaded, setItemsLoaded] = useState(false);\n  const [errorLoadingItems, setErrorLoadingItems] = useState(false);\n  const [mbItems, setMbItems] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackPack, setSnackPack] = React.useState([]);\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n  const [theme, setTheme] = useState(Themes.WHITE);\n  const [triggerExport, setTriggerExport] = useState(false);\n\n  useEffect(() => {\n    getProductsFromWooCommerce();\n  }, []);\n\n  React.useEffect(() => {\n    if (snackPack.length && !messageInfo) {\n      // Set a new snack when we don't have an active one\n      setMessageInfo({ ...snackPack[0] });\n      setSnackPack((prev) => prev.slice(1));\n      setSnackbarOpen(true);\n    } else if (snackPack.length && messageInfo && snackbarOpen) {\n      // Close an active snack when a new one is added\n      setSnackbarOpen(false);\n    }\n  }, [snackPack, messageInfo, snackbarOpen]);\n\n  // useEffect(() => {\n  //   console.log(\"retrieved items from products\");\n  //   console.log(items);\n  // }, [items]);\n\n  // fetch images\n  const getProductsFromWooCommerce = () => {\n    setItems([]);\n    setItemsLoaded(false);\n    api\n      .get(\"products\")\n      .then((res) => {\n        if (res.status === 200) {\n          if (res.data) {\n            res.data.forEach((product) => {\n              if (\n                product.name !== \"Reverse Withdrawal Payment\" &&\n                product.images\n              ) {\n                product.images.forEach((image, index) => {\n                  const imageToAdd = {\n                    ...image,\n                    brandName: product.name,\n                    price: product.price,\n                    productUrl: product.permalink,\n                    stockStatus: product.stockStatus,\n                    id: `${product.id}-${index}`,\n                  };\n                  setItems((oldItems) => [...oldItems, imageToAdd]);\n                });\n              }\n            });\n            setItemsLoaded(true);\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  const handleExited = () => {\n    setMessageInfo(undefined);\n  };\n\n  const handleOpenSettingsModal = () => {\n    setSettingsModalOpen(true);\n  };\n\n  const handleThemeBackgroundColor = () => {\n    return theme === Themes.WHITE\n      ? \"whiteBackground\"\n      : theme === Themes.BEIGE\n      ? \"beigeBackground\"\n      : theme === Themes.BLACK\n      ? \"blackBackground\"\n      : Themes.WHITE;\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <div className={handleThemeBackgroundColor()}>\n        <ProductItemsContext.Provider\n          value={{\n            items,\n            setItems,\n            itemsLoaded,\n            mbItems,\n            setMbItems,\n            snackPack,\n            setSnackPack,\n            triggerExport,\n            setTriggerExport,\n            errorLoadingItems,\n          }}\n        >\n          {/* <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            align=\"center\"\n            noWrap\n            sx={{ flex: 1 }}\n          >\n            The Mood Board\n          </Typography> */}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <div className=\"settings-button\">\n              <Fab\n                color=\"white\"\n                aria-label=\"add\"\n                onClick={handleOpenSettingsModal}\n              >\n                <Settings />\n              </Fab>\n            </div>\n          </div>\n          <MoodBoard />\n          <Snackbar\n            key={messageInfo ? messageInfo.key : undefined}\n            open={snackbarOpen}\n            autoHideDuration={4000}\n            onClose={handleClose}\n            TransitionProps={{ onExited: handleExited }}\n          >\n            <Alert severity=\"success\">\n              {messageInfo ? messageInfo.message : undefined}\n            </Alert>\n          </Snackbar>\n          <SettingsModal\n            open={settingsModalOpen}\n            // handleCanvasExport={handleCanvasExport}\n            handleClose={() => setSettingsModalOpen(false)}\n          />\n        </ProductItemsContext.Provider>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Assets/Styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}